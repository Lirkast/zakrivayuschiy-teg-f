/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

*/

.page {
  font-family: var(--font-family), sans-serif;
  font-size: var(--font-size-m);
  margin: 100px auto;
  color: var(--base-color);
  background-image: var(--bg-img);
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  min-inline-size: 320px;
  min-block-size: 100dvb;
  inline-size: clamp(23.4375rem, 16.2852rem + 30.5164vw, 43.75rem);
  font-variation-settings: 'wght' 400;
}

.header {
  margin-block-start: 100px;
  margin-block-end: 100px;
  padding: 128px 14px;
  font-family: var(--accent-font-family);
  gap: 20px;
  justify-items: center;
  border: var(--line);
  background-color: var(--accent-color);
  @media (width <= 376px) {
    padding: 120px 14px;
  }
}

.header__title {
  text-transform: uppercase;
  font-size: clamp(3.0625rem, 2.1083rem + 4.0712vw, 4.0625rem);
}

.header__text {
  text-transform: uppercase;
  margin-block-start: 20px;
  font-size: clamp(0.875rem, 0.3383rem + 2.2901vw, 1.4375rem);
}

.card {
  border: var(--line);
  margin-block-end: 50px;
  background-color: var(--accent-color);
  
  @media (width <= 376px) {
    margin-block-end: 49px;
  }
}

.card__title {
  padding: 5px 10px;
  font-variation-settings: 'wght' 700;
  font-size: var(--font-size-m);
  padding-inline-start: 10px;
  padding-inline-end: 10px;
  outline: var(--line);
}

.description__tex {
  line-height: 21px;
}

.description__text:not(:first-of-type) {
  margin-block-start: 27px;
}

.card__description {
  padding:25px 25.5px 25px 25px;

  @media (width <= 376px) {
    padding: 22px 26px 25px 25px;
  }
}

.poem {
  padding: 0 25%;

  @media (width <= 376px) {
    padding: 0;
  }
}

.card-img__block {
  position: relative;
  border-block: var(--line);
}

.card-img {
  display: block;
  max-block-size: 100%;
  max-inline-size: 100%;
  object-fit: cover;
  object-position: center;
}

.card-label {
  font-family: var(--accent-font-family), Arial;
  font-size: var(--font-size-s);
  position: absolute;
  opacity: 0.5;
  text-shadow: 0 -1px #fff, 1px 0 #fff, 0 1px #fff, -1px 0 #fff;
  inset-block-start: 25px;
  inset-inline-end: 13px;
  mix-blend-mode: hard-light;

  @supports ((text-stroke: 1px #fff) or (-webkit-text-stroke: 1px #fff)) {
    text-stroke: 1px #fff;
    -webkit-text-stroke: 1px #fff;
    text-shadow: none;
  }
}

.saturate_s {
  filter: saturate(33%);
}

.saturate_m {
  filter: saturate(500%);
}

.hue_rotate {
  filter: hue-rotate(30deg);
}

.invert {
  filter: invert(75%);
}

.sepia {
  filter: sepia(65%);
}

.blur {
  filter: blur(5px);
}

.multiple_filter {
  filter: sepia(45%) saturate(130%) hue-rotate(240deg) brightness(85%);
}

.card__button {
  display: flex;
  justify-content: flex-end;
  padding-inline-end: 25px;
  padding-block-end: 25px;
  gap: 4px;
}

.card__icon-button {
  min-inline-size: 39px;
  min-block-size: 36px;
  padding: 0;
  border: 2px solid transparent;
  background-color: transparent;
  cursor: pointer;
  transition: border 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.card__like-button {
  min-inline-size: 130px;
  min-block-size: 38px;
  cursor: pointer;
}

.animation-button:after {
  content: "";
  position: absolute;
  inset: 0;
  background-color: #000;
  transform-origin: left;
  scale: 0 1;
  transition: scale 0.5s ease-in-out;
}

.animation-button:hover:after {
  scale: 1;
}

.like-icon {
  min-block-size: 36px;
  min-inline-size: 39px;
}

.heart {
  transform-origin: center;
}

.sparks {
  opacity: 0;
}

.button__text {
  font-family: var(--accent-font-family), fantasy;
  font-size: var(--font-size-s);
  line-height: 90%;
  position: relative;
  z-index: 10;
  text-align: center;
  mix-blend-mode: difference;
}

.close {
  padding: 12.5px clamp(7.25rem, 6.832rem + 1.784vi, 8.438rem);
  min-inline-size: 100%;
}

.close span {
  text-transform: uppercase;
}

.save {
  margin: 50px auto;
  min-block-size: 55px;
  min-inline-size: 339px;
  gap: 8px;
  align-self: center;
  justify-self: center;

  @media (width <= 376px) {
    margin: 50px 34.5px 100px 34.5px;
    min-block-size: 84px;
    min-inline-size: 306px;
    flex-direction: column;
  }
}

.save svg {
  position: relative;
  inline-size: 21px;
  z-index: 2;
  mix-blend-mode: difference;
}

dialog::backdrop {
  background-color: rgb(0 0 0 / 0.75);
}

.modal {
  border: var(--line);
  inline-size: clamp(21.313rem, 21.048rem + 1.127vi, 22.063rem);
  font-family: var(--accent-font-family);
  font-weight: var(--wght-s);
  text-transform: uppercase;
  font-size: var(--font-size-s);
}

.modal_block {
  display: flex;
  align-items: center;
  gap: 20px;
}

.modal_block svg {
  max-inline-size: 39px;
}

dialog[open] {
  display: grid;
  gap: 30px;
  font-family: var(--accent-font-family), sans-serif;
  font-size: var(--font-size-s);
  font-variation-settings: 'wght' var(--wght-s);
  line-height: 21px;
  padding: 30px;
  inline-size: clamp(21.313rem, 20.96rem + 1.502vw, 22.313rem);
  
  @media (width <= 376px) {
    padding: 30px 42px;
  }
} 

.button {
  width: 130px;
  height: 38px;
  border: var(--line);
  color: #fff;
  background-color: var(--accent-color);
  position: relative;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.button:focus-visible {
  box-shadow: 2px 2px #000;
  outline: none;
}

.button svg {
  position: relative;
  z-index: 1;
  mix-blend-mode: difference;
}

.button:after {
  content: "";
  position: absolute;
  inset: 0;
  background-color: #000;
  transform-origin: left;
  transform: scaleX(0);
  transition: transform 0.5s ease-in-out;
}

.button:hover:after {
  transform: scaleX(1);
}
